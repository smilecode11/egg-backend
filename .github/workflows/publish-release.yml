name: Publish Release 1
on: 
  # 在特定 tag 被 push 以后被调用
  push:
    tags:
      - 'v*.*.*'
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # checkout 代码
      - uses: actions/checkout@v2
      # 创建 .env 文件, 并写入环境变量
      - name: 'create env file'
        run: |
          touch .env
          echo ALC_ACCESS_KEY=${{ secrets.ALC_ACCESS_KEY }} >> .env
          echo ALC_SECRET_KEY=${{ secrets.ALC_SECRET_KEY }} >> .env
          echo GITEE_CID=${{ secrets.GITEE_CID }} >> .env
          echo GITEE_SECRET=${{ secrets.GITEE_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo PING_ENV=${{ secrets.PING_ENV }} >> .env
      # 使用阿里 ACR 完成 docker login
      - name: 'Login to Aliyun Container Registry (ACR)'
        uses: aliyun/acr-login@v1
        with:
          login-server: registry.cn-hangzhou.aliyuncs.com
          region-id: cn-hangzhou
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      # 使用 github tag 对应的 ACR tag 进行 docker build
      - name: 'Build image for Docker'
        run: docker build --tag "registry.cn-hangzhou.aliyuncs.com/smiling/smile-backend:${{ github.ref_name }}" .
      # 使用标记的 tag 进行 push
      - name: 'Push Image to ACR'
        run: docker push registry.cn-hangzhou.aliyuncs.com/smiling/smile-backend:${{ github.ref_name }}
      # 查找 docker-compose-online 文件, 完成版本替换
      - name: 'Fund and Replace with version'
        uses: jacobtomlinson/gha-find-replace@v2
        with: 
          find: "{{tag}}"
          replace: ${{ github.ref_name }}
          include: "docker-compose-online.yml"
      - run: cat docker-compose-online.yml
      # 拷贝必要文件到文件夹, 包括 .env docker-compose-online mongo-entrypoint
      - name: "Copy necessary files into one folder"
        run: |
          mkdir smile-backend
          cp .env docker-compose-online.yml smile-backend
          cp -r mongo-entrypoint smile-backend
          ls -a smile-backend
      # 通过 scp 拷贝必要文件到服务器
      - name: "Copy smile-backend foder via SCP"
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          source: "smile-backend"
          target: "~"
      # 通过 ssh 登录后重启服务
      - name: 'executing ssh and restart docker'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          script_stop: true
          script: |
            docker login --username=${{ secrets.ACR_USERNAME }} --password=${{ secrets.ACR_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
            cd ~/smile-backend
            ocker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout registry.cn-hangzhou.aliyuncs.com


